{"title":"0基础学Java-使用Eclipse","uid":"c213d50a4ba4928fca2cb4dfc93c01e7","slug":"Use-of-eclipse","date":"2022-04-10T06:58:37.000Z","updated":"2022-04-30T14:29:39.808Z","comments":true,"path":"api/articles/Use-of-eclipse.json","keywords":null,"cover":[],"content":"<p>Eclipse是目前最流行的Java语言开发工具之一，它具有强大的代码辅助功能，可以帮助程序开发人员自动完成语法修正、补全文字、代码修正、API提示等编码工作，从而节省 大量的时间和精力。</p>\n<p>本篇将介绍如何使用 Eclipse完成HelloJava程序的编写和运行。</p>\n<h2 id=\"创建Java项目\"><a href=\"#创建Java项目\" class=\"headerlink\" title=\"创建Java项目\"></a>创建Java项目</h2><p>在Eclipse中编写程序，必须先创建项目，然后单击“下一步”或“完成”按钮</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/6309db409180e48b.png\" alt=\"创建项目对话框\" style=\"zoom:50%;\" />\n\n<p>此时将弹出如下图所示的新建模块化声明文件对话框。模块化开发是JDK 9新增的特性，但模块化开发过于复杂，新建的模块化声明文件也会影响Java项目的运行，因此这里单击Don’t Create按钮。至此，已完成Java项目的新建操作。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/fbbb21705a481928.png\" style=\"zoom:100%;\" />\n\n\n\n\n\n\n\n<h2 id=\"创建Java类文件\"><a href=\"#创建Java类文件\" class=\"headerlink\" title=\"创建Java类文件\"></a>创建Java类文件</h2><p>创建Java类文件时，会自动打开Java编辑器。创建Java类文件可以 通过“新建Java类”向导来完成。</p>\n<p>在Eclipse菜单栏中选择“文件”&#x2F;“新建”&#x2F;“类”命令，将打开“新建Java类”向导对话框</p>\n<p>使用该向导对话框创建Java类的步骤如下：<br>（1）在“源文件夹”文本框中输入项目源程序文件夹的位置。<em>通常向导会自动填写该文本框，<strong>没有特殊情况，不需要修改。</strong></em><br>（2）在“包”文本框中输入类文件的包名，这里暂时默认为空，不输入任何信息，这样就会使用Java工程的默认包。<br>（3）在“名称”文本框中输入新建类的名称，如HelloJava。<br>（4）选中public static void main(String[] args)复选框，向导在创建类文件时，<strong>会自动为该类添加main()方法</strong>，使该类成为可以运行的主类。</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/f6f98fbf32e000b8.png\" style=\"zoom:80%;\" />\n\n\n\n\n\n\n\n<h2 id=\"使用编辑器编写程序代码\"><a href=\"#使用编辑器编写程序代码\" class=\"headerlink\" title=\"使用编辑器编写程序代码\"></a>使用编辑器编写程序代码</h2><h3 id=\"打开Java编辑器\"><a href=\"#打开Java编辑器\" class=\"headerlink\" title=\"打开Java编辑器\"></a>打开Java编辑器</h3><p>在使用向导创建Java类文件之后，会自动打开Java编辑器编辑新创建的Java类文件。除此之外，打开Java编辑器最常用的方法是在“包资源管理器”视图中双击Java源文件或在Java源文件处右击并在弹出的快捷菜单中选择“打开方式”&#x2F;“Java编辑器”命令。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/04/10/14162f47c0e26b5c.png\"></p>\n<p>Java编辑器以不同的样式和颜色突出显示 Java语法。这些突出显示的语法包括以下几个方面：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">程序代码注释。 \n\nJavadoc注释。 \n\nJava关键字。</code></pre>\n\n<h3 id=\"编写Java代码\"><a href=\"#编写Java代码\" class=\"headerlink\" title=\"编写Java代码\"></a>编写Java代码</h3><p>Eclipse的强大之处还在于**<u>编写Java程序代码时，可以使用Ctrl+Alt+&#x2F;快捷 键自动补全Java关键字</u>**，创建HelloJava类之后，向导会自动构建HelloJava类结构的部分代码，并建立main()方法。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>技巧<br>在Eclipse安装后，Java编辑器文本字体为Consolas 10。采用这个字 体时，中文显示比较小，不方便查看。这时，可以选择主菜单上的“窗 口”&#x2F;“首选项”命令，打开“首选项”对话框，在左侧的列表中选择“常 规”&#x2F;“外观”&#x2F;“颜色和字体”节点，在右侧选择Java&#x2F;“Java编辑器文本字 体”节点，并单击“编辑”按钮，在弹出的对话框中选择Courier New字 体，单击“确定”按钮，返回到“首选项”对话框中，单击“应用”按钮即 可。另外，“调试”&#x2F;“控制台字体”节点也需要进行以上修改。</p></blockquote>\n<p>我们按照图片的代码进行模仿编写</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/04/10/24f9889eb0b05c18.png\"></p>\n<p>它包括private、static、String 3个关键字。这3个关键字在记事本程序中手动输入虽然不会花多长时间，但却无法避免出现输入错误的情况。</p>\n<p>如果是名称更长、更复杂的关键字，就更容易出现错误。而在Eclipse的Java编辑器 中，可以只输入关键字的部分字母，<del>然后使用Ctrl+Alt+&#x2F;快捷键自动补全Java关键字，如图所示。</del>（对于2021-12-R版本已失效）</p>\n<p>点击窗口&gt;首选项&gt;Java&gt;编辑器&gt;内容辅助，自动激活的自动激活触发器由“.”改为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.abcdefghijklmnopqrstuvwxyz(</code></pre>\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/b15ff880ad6147dd.png\" alt=\"内容辅助\" style=\"zoom:80%;\" />\n\n\n\n<p>使用System.out.println()方法输出文字信息到控制台，这是程序开发时最常使用的方法之一。</p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/04/10/f22b26809d2aca22.png\"></p>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/04/10/a1fc84a9c819939f.png\"></p>\n<h3 id=\"运行Java程序\"><a href=\"#运行Java程序\" class=\"headerlink\" title=\"运行Java程序\"></a>运行Java程序</h3><p>HelloJava类包含main()方法，它是一个可以运行的主类。例如，在 Eclipse中运行HelloJava程序，可以在“包资源管理器”视图的HelloJava文件处右击，在弹出的菜单中选择“运行方式”&#x2F;“ Java应用程序”命令。程序运行</p>\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/9aa8fb3ba151bcb9.png\" alt=\"运行\" style=\"zoom:67%;\" />\n\n<img src=\"https://s3.bmp.ovh/imgs/2022/04/10/0c512ba4c274c58f.png\" alt=\"运行结果\" style=\"zoom:150%;\" />\n\n<h2 id=\"程序调试\"><a href=\"#程序调试\" class=\"headerlink\" title=\"程序调试\"></a>程序调试</h2><p>读者在程序开发过程中会不断体会到程序调试的重要性。为验证 Java单元的运行状况，以往会在某个方法调用的开始和结束位置<strong>分别使用System.out.println()方法输出状态信息</strong>，并根据这些信息判断程序执行状况，<strong>但这种方法比较原始，而且经常导致程序代码混乱</strong>（导出的都是 System.out.println()方法）。</p>\n<p>使用Eclipse的Java调试器需要设置程序断点，然后使用单步调试分别执行程序代码的每一行。</p>\n<h3 id=\"添加断点\"><a href=\"#添加断点\" class=\"headerlink\" title=\"添加断点\"></a>添加断点</h3><p>设置断点是程序调试中必不可少的手段，Java调试器每次遇到程序断点时都会将<strong>当前线程挂起</strong>，即**<u>暂停当前程序的运行</u>**。</p>\n<p>1）在Java编辑器中显示代码行号的位置双击添加或删除当前行的断点，</p>\n<p><img src=\"https://s1.ax1x.com/2022/04/10/LkjbT0.png\" alt=\"1）双击行代码\"></p>\n<p>2）或者在当前<strong>行号的位置</strong>右击，在弹出的快捷菜单中选择“切换断点”命令实现断点的添加与删除</p>\n<p><img src=\"https://s1.ax1x.com/2022/04/10/LkvLDA.png\" alt=\"2）右击行号\"></p>\n<h3 id=\"以调试方式运行Java程序\"><a href=\"#以调试方式运行Java程序\" class=\"headerlink\" title=\"以调试方式运行Java程序\"></a>以调试方式运行Java程序</h3><p>要在Eclipse中调试HelloJava程序，可以在“包资源管理器”视图中 HelloJava文件处右击，在弹出的快捷菜单中选择“调试方式”&#x2F;“ Java应用程序 ” 命令。在代码设置了断点，调试器将在该断点处 挂起当前线程，使程序暂停</p>\n<p>程序执行到断点被暂停后，可以通过“调试”视图工具栏上的按钮执 行相应的调试操作，如运行、停止等。</p>\n<img src=\"https://s1.ax1x.com/2022/04/10/LkxfMQ.png\" style=\"zoom:67%;\" />\n\n\n\n\n\n<h3 id=\"程序调试-1\"><a href=\"#程序调试-1\" class=\"headerlink\" title=\"程序调试\"></a>程序调试</h3><p>程序执行到断点被暂停后，可以通过“调试”视图工具栏上的按钮执 行相应的调试操作，如运行、停止等</p>\n<p><img src=\"https://s1.ax1x.com/2022/04/10/LAS9mj.png\"></p>\n<h4 id=\"单步跳过\"><a href=\"#单步跳过\" class=\"headerlink\" title=\"单步跳过\"></a>单步跳过</h4><p>在“调试”视图的工具栏中单击按钮或按F6键，将执行单步跳过操作，即<strong>运行单独的一行程序代码</strong>，但是**<u>不进入调用方法的内部</u>**，然后<u>跳到下一个可执行点并暂挂线程</u>。</p>\n<h4 id=\"单步跳入\"><a href=\"#单步跳入\" class=\"headerlink\" title=\"单步跳入\"></a>单步跳入</h4><p>在“调试”视图的工具栏中单击按钮或按F5键，**将跳入调用方法或对象的<u>内部</u>**，单步执行程序并暂挂线程。</p>\n","text":"Eclipse是目前最流行的Java语言开发工具之一，它具有强大的代码辅助功能，可以帮助程序开发人员自动完成语法修正、补全文字、代码修正、API提示等编码工作，从而节省 大量的时间和精力。 本篇将介绍如何使用 Eclipse完成HelloJava程序的编写和运行。 创建Java项...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"Eclipse","slug":"Eclipse","count":7,"path":"api/tags/Eclipse.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAJava%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">创建Java项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAJava%E7%B1%BB%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建Java类文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%BC%96%E8%BE%91%E5%99%A8%E7%BC%96%E5%86%99%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">使用编辑器编写程序代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80Java%E7%BC%96%E8%BE%91%E5%99%A8\"><span class=\"toc-text\">打开Java编辑器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99Java%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">编写Java代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8CJava%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">运行Java程序</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">程序调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E6%96%AD%E7%82%B9\"><span class=\"toc-text\">添加断点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E8%B0%83%E8%AF%95%E6%96%B9%E5%BC%8F%E8%BF%90%E8%A1%8CJava%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">以调试方式运行Java程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95-1\"><span class=\"toc-text\">程序调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E6%AD%A5%E8%B7%B3%E8%BF%87\"><span class=\"toc-text\">单步跳过</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E6%AD%A5%E8%B7%B3%E5%85%A5\"><span class=\"toc-text\">单步跳入</span></a></li></ol></li></ol></li></ol>","author":{"name":"ACbug战队","slug":"blog-author","avatar":"https://img1.i-nmb.cn/ava.png","link":"/","description":"西北民族大学数学与计算机科学学院<br>系统与软件工作室网络安全组","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"2022年度SMUCTF的WP笔记","uid":"c738434b6ecd4da095a1bdb7c5e7b073","slug":"SMUCTF","date":"2022-04-15T09:47:24.000Z","updated":"2022-09-04T16:14:16.369Z","comments":true,"path":"api/articles/SMUCTF.json","keywords":null,"cover":[],"text":"福建三明学院信息工程学院网络攻防大赛（SMUCTF）是由共青团三明学院信息工程学院委员会主办、信息工程学院网络安全协会承办的一场关于网络安全技术练习的CTF夺旗赛。 本篇文章将展示笔者对2022年度福建三明学院信息工程学院网络攻防大赛（SMUCTF）的部分解题笔记（个人理解）。能...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"测试","slug":"测试","count":1,"path":"api/categories/测试.json"}],"tags":[{"name":"CTF","slug":"CTF","count":1,"path":"api/tags/CTF.json"},{"name":"WP","slug":"WP","count":1,"path":"api/tags/WP.json"}],"author":{"name":"ACbug战队","slug":"blog-author","avatar":"https://img1.i-nmb.cn/ava.png","link":"/","description":"西北民族大学数学与计算机科学学院<br>系统与软件工作室网络安全组","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}